#ifndef __EARTH_CURVATURE__
#define __EARTH_CURVATURE__

#define COMPENSATE_EARTH_CURVATURE 1

half _EarthCurvatureCompensation;

#if defined(COMPENSATE_EARTH_CURVATURE)
	static const float EarthCurvatureApproximations[81] = { 0.0000000000000000,-0.0121026969828186,-0.0484107893459207,-0.1089242749673370,-0.1936431552617130,-0.3025674295217270,-0.4356970970400550,-0.5930321578166970,-0.7745726104370080,-0.9803184549009860,-1.2102696897939900,-1.4644263151160100,-1.7427883294524000,-2.0453557313885300,-2.3721285202170600,-2.7231066945233600,-3.0982902528927700,-3.4976791946179600,-3.9212735168696600,-4.3690732196478600,-4.8410782994159400,-5.3372887561739000,-5.8577045870924500,-6.4023257900496200,-6.9711523629234500,-7.5641843042992800,-8.1814216113478300,-8.8228642819471200,-9.4885123139751800,-10.1783657038954000,-10.8924244502931000,-11.6306885489245000,-12.3931579990820000,-13.1798327958146000,-13.9907129377075000,-14.8257984205168000,-15.6850892414132000,-16.5685853975674000,-17.4762868854429000,-18.4081937015029000,-19.3643058415036000,-20.3446233033230000,-21.3491460820098000,-22.3778741740274000,-23.4308075758392000,-24.5079462832012000,-25.6092902918695000,-26.7348395976003000,-27.8845941968567000,-29.0585540846877000,-30.2567192561419000,-31.4790897076828000,-32.7256654336516000,-33.9964464305119000,-35.2914326918977000,-36.6106242142724000,-37.9540209919774000,-39.3216230207688000,-40.7134302935733000,-42.1294428068544000,-43.5696605549534000,-45.0340835315044000,-46.5227117315562000,-48.0355451494502000,-49.5725837795278000,-51.1338276161304000,-52.7192766521848000,-54.3289308834470000,-55.9627903021366000,-57.6208549033022000,-59.3031246798705000,-61.0095996254758000,-62.7402797337521000,-64.4951649990407000,-66.2742554128539000,-68.0775509702404000,-69.9050516627122000,-71.7567574846109000,-73.6326684288631000,-75.5327844869810000,-77.4571056533060000 };

	#if defined(COMPENSATE_EARTH_CURVATURE_PER_VERTEX)
		inline float4 CompensateForEarthCurvature(float4 posWorld)
		{
			if (_EarthCurvatureCompensation == 1)
			{
				float index = min(79, length(posWorld.xz - _WorldSpaceCameraPos.xz) / 250.0);
				float indexL = floor(index);
				posWorld.y += lerp(EarthCurvatureApproximations[indexL], EarthCurvatureApproximations[indexL + 1], index - indexL);
			}

			return posWorld;
		}
	#else
		inline float4 CompensateForEarthCurvature(float4 posWorld)
		{
			if (_EarthCurvatureCompensation == 1)
			{
				float index = min(79, length(float2(unity_ObjectToWorld[0].w, unity_ObjectToWorld[2].w) - _WorldSpaceCameraPos.xz) / 250.0);
				float indexL = floor(index);
				posWorld.y += lerp(EarthCurvatureApproximations[indexL], EarthCurvatureApproximations[indexL + 1], index - indexL);
			}

			return posWorld;
		}
	#endif
#else
	#define CompensateForEarthCurvature(posWorld) posWorld
#endif

#endif // __EARTH_CURVATURE__
